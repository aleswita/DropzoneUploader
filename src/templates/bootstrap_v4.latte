<div class="container">

 <div class="row mb-5">
  <div class="col-8 offset-2">
   {form form, class => "dropzone card py-5 text-center lead"}{/form}
  </div>
 </div>

 <div id="previews">
  <div id="template" class="row alert">

   {* file name *}
   <div class="col-4 text-truncate" data-dz-name></div>

   {* file size *}
   <div class="col-1 text-right" data-dz-size></div>

   {* progress *}
   <div class="col-2">
    <div class="progress">
     <div class="progress-bar" style="width: 0%" data-dz-uploadprogress></div>
    </div>
   </div>

   {* file error *}
   <div class="col-3 text-truncate" data-dz-errormessage></div>

  </div>
 </div>

</div>

<script type="text/javascript">
 var previewNode = document.querySelector("#template");
 previewNode.id = "";
 var previewTemplate = previewNode.parentNode.innerHTML;
 previewNode.parentNode.removeChild(previewNode);

 Dropzone.options.dropzoneForm = {

  {foreach $settings as $key => $val}
   {$key}: {$val},
  {/foreach}

  {foreach $messages as $key => $val}
   {$key}: {$val|translate},
  {/foreach}

  "previewsContainer": "#previews",
  "previewTemplate": previewTemplate,

  init: function() {
   {* drop *}
   this.on("drop", function(e) {
    this.element.classList.remove("card-outline-primary");
    this.element.classList.remove("text-primary");
   });

   {* dragenter *}
   this.on("dragenter", function(e) {
    this.element.classList.add("card-outline-primary");
    this.element.classList.add("text-primary");
   });

   {* dragover *}
   this.on("dragover", function(e) {
    this.element.classList.add("card-outline-primary");
    this.element.classList.add("text-primary");
   });

   {* dragleave *}
   this.on("dragleave", function(e) {
    this.element.classList.remove("card-outline-primary");
    this.element.classList.remove("text-primary");
   });

   {* reset *}
   this.on("reset", function(e) {
    this.element.classList.remove("card-outline-primary");
    this.element.classList.remove("text-primary");
   });

   {* error *}
   this.on("error", function(file, errorMessage) {
    file.previewElement.classList.add("alert-danger");
   });

   {* success *}
   this.on("success", function(file, response) {
    file.previewElement.classList.add("alert-success");
   });

   {* canceled *}
   this.on("canceled", function(file) {
    file.previewElement.classList.add("alert-warning");
   });

   {* uploadprogress *}
   this.on("uploadprogress", function(file, progress, bytesSent) {
    var progressElement = file.previewElement.querySelector("[data-dz-uploadprogress]");
    progressElement.style.width = progress + "%";
    progressElement.textContent = progress + "%";
   });

   {* removedfile *}
   this.on("removedfile", function(file) {
    if (file.accepted) {
     $.ajax({
      type: "GET",
      url: {link remove!},
      data: {
       {$fileParam}: file.name,
      },
     });
    }
   });
  },
 };
</script>
